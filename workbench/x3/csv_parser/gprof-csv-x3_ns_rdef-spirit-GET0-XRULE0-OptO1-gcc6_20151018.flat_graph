Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  us/call  us/call  name    
  3.42      0.04     0.04                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check_length(unsigned long, unsigned long, char const*) const (basic_string.h:271 @ 46347f)
  3.42      0.08     0.04                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) (basic_string.h:110 @ 409b48)
  2.56      0.11     0.03                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const (basic_string.h:855 @ 462a9c)
  2.56      0.14     0.03                             __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) (new_allocator.h:110 @ 40b505)
  2.14      0.17     0.03 70000000     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:206 @ 408c30)
  1.71      0.19     0.02 66000000     0.00     0.00  bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40ae57)
  1.71      0.21     0.02                             void boost::spirit::x3::traits::move_to<char>(char const&, char&) (move_to.hpp:194 @ 40ae78)
  1.71      0.23     0.02                             __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) (new_allocator.h:110 @ 40b04a)
  1.71      0.25     0.02                             __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() (stl_iterator.h:790 @ 40ae84)
  1.71      0.27     0.02                             bool boost::spirit::x3::char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >::parse<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, boost::spirit::x3::unused_type const>(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, boost::spirit::x3::unused_type, boost::spirit::x3::unused_type const&) const (char_parser.hpp:29 @ 40b6f6)
  1.71      0.29     0.02                             bool boost::spirit::x3::char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >::parse<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, char>(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, boost::spirit::x3::unused_type, char&) const (char_parser.hpp:29 @ 40aec6)
  1.71      0.31     0.02                             bool boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >::parse<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const (kleene.hpp:32 @ 40af41)
  1.71      0.33     0.02                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const (basic_string.h:136 @ 46372e)
  1.71      0.35     0.02                             std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned long) (stl_vector.h:170 @ 40a8c1)
  1.71      0.37     0.02                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_compare(unsigned long, unsigned long) (basic_string.h:361 @ 462a77)
  1.71      0.39     0.02                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() (basic_string.h:142 @ 40b492)
  1.71      0.41     0.02                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (basic_string.tcc:392 @ 463470)
  1.71      0.43     0.02                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (basic_string.tcc:417 @ 463519)
  1.71      0.45     0.02                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char) (basic_string.h:1526 @ 40ae8e)
  1.71      0.47     0.02                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, unsigned long, char) (basic_string.h:1323 @ 4636f7)
  1.28      0.48     0.02                             bool boost::spirit::x3::detail::parse_into_container_base_impl<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >::call_synthesize_x<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, mpl_::bool_<false>) (parse_into_container.hpp:99 @ 40ae64)
  1.28      0.50     0.02                             bool __gnu_cxx::operator!=<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_iterator.h:871 @ 40ae68)
  1.28      0.51     0.02                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const (basic_string.h:152 @ 4634a1)
  1.28      0.53     0.02                             std::char_traits<char>::copy(char*, char const*, unsigned long) (char_traits.h:288 @ 408c6c)
  1.28      0.54     0.02                             void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:232 @ 408c71)
  1.28      0.56     0.02                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (basic_string.tcc:399 @ 4634a5)
  1.28      0.57     0.02                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) (basic_string.h:110 @ 40a921)
  1.28      0.59     0.02                             void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:215 @ 408c58)
  0.85      0.60     0.01 11000000     0.00     0.00  bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40b095)
  0.85      0.61     0.01 11000000     0.00     0.00  bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40afc1)
  0.85      0.62     0.01 11000000     0.00     0.00  bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40b203)
  0.85      0.63     0.01     6000     1.67     1.67  bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >(boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&) (parse_into_container.hpp:282 @ 40baf2)
  0.85      0.64     0.01                             bool boost::spirit::x3::detail::rule_parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, auto csv::make_csv_parser<char>(char)::_>::parse_rhs_main<boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, mpl_::bool_<false>) (rule.hpp:209 @ 40b37d)
  0.85      0.65     0.01                             bool boost::spirit::x3::detail::rule_parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, auto csv::make_csv_parser<char>(char)::_>::call_rule_definition<boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, mpl_::bool_<false> >(boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > > const&, char const*, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, mpl_::bool_<false>) (rule.hpp:344 @ 40af6e)
  0.85      0.66     0.01                             bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:289 @ 40aeab)
  0.85      0.67     0.01                             bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (parse_into_container.hpp:289 @ 40b439)
  0.85      0.68     0.01                             bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:289 @ 40b13e)
  0.85      0.69     0.01                             bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:289 @ 40af90)
  0.85      0.70     0.01                             bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:289 @ 40b27a)
  0.85      0.71     0.01                             bool boost::spirit::x3::detail::parse_sequence_plain<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char&) (sequence.hpp:338 @ 40aead)
  0.85      0.72     0.01                             bool boost::spirit::x3::detail::parse_into_container_base_impl<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >::call_synthesize_x<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, mpl_::bool_<false>) (parse_into_container.hpp:99 @ 40ab56)
  0.85      0.73     0.01                             bool boost::spirit::x3::detail::parse_into_container_base_impl<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >::call_synthesize_x<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, mpl_::bool_<false>) (parse_into_container.hpp:106 @ 40b4d9)
  0.85      0.74     0.01                             void boost::spirit::x3::traits::post_transform<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (transform_attribute.hpp:107 @ 40a63a)
  0.85      0.75     0.01                             __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) (new_allocator.h:110 @ 40ae45)
  0.85      0.76     0.01                             bool __gnu_cxx::operator!=<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_iterator.h:871 @ 40b150)
  0.85      0.77     0.01                             bool boost::spirit::x3::char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >::parse<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, boost::spirit::x3::unused_type>(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, boost::spirit::x3::unused_type, boost::spirit::x3::unused_type&) const (char_parser.hpp:29 @ 40aeb7)
  0.85      0.78     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const (basic_string.h:152 @ 462a89)
  0.85      0.79     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const (basic_string.h:797 @ 462a98)
  0.85      0.80     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const (basic_string.h:136 @ 462a95)
  0.85      0.81     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const (basic_string.h:857 @ 462ff2)
  0.85      0.82     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const (basic_string.h:855 @ 463742)
  0.85      0.83     0.01                             std::char_traits<char>::move(char*, char const*, unsigned long) (char_traits.h:282 @ 463788)
  0.85      0.84     0.01                             std::char_traits<char>::assign(char&, char const&) (char_traits.h:243 @ 40afeb)
  0.85      0.85     0.01                             std::char_traits<char>::assign(char&, char const&) (char_traits.h:243 @ 463514)
  0.85      0.86     0.01                             std::char_traits<char>::assign(char&, char const&) (char_traits.h:243 @ 4638db)
  0.85      0.87     0.01                             std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned long) (stl_vector.h:170 @ 409b28)
  0.85      0.88     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (stl_uninitialized.h:74 @ 40bd09)
  0.85      0.89     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() (basic_string.h:180 @ 40b041)
  0.85      0.90     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:439 @ 4637a8)
  0.85      0.91     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:470 @ 4637d1)
  0.85      0.92     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) (basic_string.h:110 @ 40bd1b)
  0.85      0.93     0.01                             void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:217 @ 408c5c)
  0.85      0.94     0.01                             void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:233 @ 408c82)
  0.85      0.95     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() (basic_string.h:142 @ 40aa94)
  0.85      0.96     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (basic_string.tcc:417 @ 463511)
  0.85      0.97     0.01                             void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) (basic_string.h:196 @ 40bd2e)
  0.85      0.98     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.h:1674 @ 40b05f)
  0.85      0.99     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned long) (basic_string.tcc:285 @ 463016)
  0.85      1.00     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back() (basic_string.h:1600 @ 463450)
  0.85      1.01     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.tcc:254 @ 462a8d)
  0.43      1.01     0.01 11000000     0.00     0.00  bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (parse_into_container.hpp:282 @ 40b2db)
  0.43      1.02     0.01                             bool boost::spirit::x3::detail::parse_sequence<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, boost::spirit::x3::traits::container_attribute) (sequence.hpp:378 @ 40b3c1)
  0.43      1.02     0.01                             void boost::spirit::x3::traits::move_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (move_to.hpp:187 @ 40a5e9)
  0.43      1.03     0.01                             void boost::spirit::x3::traits::move_to<char>(char const&, char&) (move_to.hpp:194 @ 40abc3)
  0.43      1.03     0.01                             void boost::spirit::x3::traits::move_to<char>(char const&, char&) (move_to.hpp:195 @ 40abcc)
  0.43      1.04     0.01                             __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) (new_allocator.h:110 @ 40b3b4)
  0.43      1.04     0.01                             __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) (new_allocator.h:110 @ 40b473)
  0.43      1.05     0.01                             __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__normal_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* const&) (stl_iterator.h:768 @ 40b478)
  0.43      1.05     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const (basic_string.h:136 @ 40a5f1)
  0.43      1.06     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const (basic_string.h:136 @ 40b354)
  0.43      1.06     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const (basic_string.h:136 @ 40c1c2)
  0.43      1.07     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const (basic_string.h:136 @ 462ac0)
  0.43      1.07     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const (basic_string.h:855 @ 463548)
  0.43      1.08     0.01                             std::char_traits<char>::copy(char*, char const*, unsigned long) (char_traits.h:290 @ 408c22)
  0.43      1.08     0.01                             std::char_traits<char>::assign(char&, char const&) (char_traits.h:243 @ 40a90c)
  0.43      1.09     0.01                             void std::_Destroy_aux<false>::__destroy<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*>(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*) (stl_construct.h:102 @ 40a4eb)
  0.43      1.09     0.01                             std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned long) (stl_vector.h:177 @ 40a9f4)
  0.43      1.10     0.01                             void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_insert_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (vector.tcc:396 @ 40a9f1)
  0.43      1.10     0.01                             void std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::_M_insert_aux<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&&) (vector.tcc:396 @ 40a4f0)
  0.43      1.11     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() (basic_string.h:180 @ 40c1c5)
  0.43      1.11     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) (basic_string.h:110 @ 40b304)
  0.43      1.12     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) (basic_string.h:110 @ 40b318)
  0.43      1.12     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (basic_string.tcc:410 @ 463530)
  0.43      1.13     0.01                             void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) (basic_string.h:196 @ 40b324)
  0.43      1.13     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) (basic_string.h:128 @ 40b4b9)
  0.43      1.14     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) (basic_string.h:297 @ 462abc)
  0.43      1.14     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.tcc:257 @ 462a80)
  0.43      1.15     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.tcc:254 @ 462a85)
  0.43      1.15     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long) (basic_string.h:132 @ 40a904)
  0.43      1.16     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long) (basic_string.h:132 @ 40b4b5)
  0.43      1.16     0.01                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:401 @ 40b358)
  0.43      1.17     0.01                             void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (stl_construct.h:75 @ 40a91c)
  0.43      1.17     0.01                             std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) (stl_iterator_base_funcs.h:102 @ 408c52)
  0.00      1.17     0.00 31000000     0.00     0.00  void boost::spirit::x3::traits::post_transform<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (transform_attribute.hpp:103 @ 40a5db)
  0.00      1.17     0.00  9000000     0.00     0.00  bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40aee9)
  0.00      1.17     0.00  2000000     0.00     0.00  bool boost::spirit::x3::detail::parse_alternative<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (alternative.hpp:244 @ 40ab02)
  0.00      1.17     0.00   328000     0.00     0.00  void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_insert_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (vector.tcc:321 @ 40a660)
  0.00      1.17     0.00    38000     0.00     0.00  bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (parse_into_container.hpp:282 @ 40b54d)
  0.00      1.17     0.00    38000     0.00     0.00  bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >(boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&) (parse_into_container.hpp:282 @ 40b7ff)
  0.00      1.17     0.00    18000     0.00     0.00  void std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::_M_insert_aux<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&&) (vector.tcc:321 @ 40a156)
  0.00      1.17     0.00     6000     0.00     0.00  bool boost::spirit::x3::detail::parse_sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >(boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, boost::spirit::x3::traits::container_attribute) (sequence.hpp:372 @ 40b9df)
  0.00      1.17     0.00     6000     0.00     0.00  void std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > > >(__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, __gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, __gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, std::forward_iterator_tag) (vector.tcc:616 @ 4098ba)
  0.00      1.17     0.00     6000     0.00     0.00  std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::reserve(unsigned long) (vector.tcc:65 @ 40946c)
  0.00      1.17     0.00     1000     0.00     0.00  int bench<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, false>&>(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, false>&) (input.hpp:56 @ 40bc0f)
  0.00      1.17     0.00        6     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) (basic_string.tcc:206 @ 408b92)
  0.00      1.17     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z12bench_parserB5cxx11 (gprof-csv.cpp:26 @ 407a7e)
  0.00      1.17     0.00        1     0.00     0.00  auto csv::make_csv_parser<char>(char) (x3_ns_rdef.hpp:15 @ 408116)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.85% of 1.17 seconds

index % time    self  children    called     name
                0.00    0.00 2000000/70000000     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) (basic_string.h:196 @ 40ab3e) [113]
                0.00    0.00 9000000/70000000     std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:401 @ 40af1d) [112]
                0.00    0.00 11000000/70000000     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) (basic_string.h:196 @ 409b5b) [109]
                0.00    0.00 11000000/70000000     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) (basic_string.h:196 @ 40b0d9) [110]
                0.00    0.00 11000000/70000000     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) (basic_string.h:196 @ 40b324) [75]
                0.00    0.00 11000000/70000000     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) (basic_string.h:196 @ 40b35f) [111]
                0.01    0.00 15000000/70000000     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) (basic_string.h:196 @ 40bd2e) [21]
[6]      2.1    0.03    0.00 70000000         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:206 @ 408c30) [6]
-----------------------------------------------
                0.02    0.00 66000000/66000000     bool boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >::parse<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const (kleene.hpp:32 @ 40af41) [1]
[7]      1.7    0.02    0.00 66000000         bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40ae57) [7]
-----------------------------------------------
                                                 <spontaneous>
[17]     1.7    0.02    0.00                 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (basic_string.tcc:392 @ 463470) [17]
-----------------------------------------------
                0.01    0.00 11000000/11000000     bool boost::spirit::x3::detail::parse_sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, boost::spirit::x3::traits::container_attribute) (sequence.hpp:379 @ 40b24e) [36]
[30]     0.9    0.01    0.00 11000000         bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40b095) [30]
-----------------------------------------------
                0.01    0.00 11000000/11000000     bool boost::spirit::x3::detail::parse_sequence<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, boost::spirit::x3::traits::container_attribute) (sequence.hpp:378 @ 40b0fa) [37]
[31]     0.9    0.01    0.00 11000000         bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40afc1) [31]
-----------------------------------------------
                0.01    0.00 11000000/11000000     bool boost::spirit::x3::detail::parse_sequence<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, boost::spirit::x3::traits::container_attribute) (sequence.hpp:378 @ 40b384) [39]
[32]     0.9    0.01    0.00 11000000         bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40b203) [32]
-----------------------------------------------
                0.01    0.00    6000/6000        bool boost::spirit::x3::detail::parse_sequence<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >(boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, boost::spirit::x3::traits::container_attribute) (sequence.hpp:378 @ 40be82) [38]
[33]     0.9    0.01    0.00    6000         bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >(boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&) (parse_into_container.hpp:282 @ 40baf2) [33]
-----------------------------------------------
                                                 <spontaneous>
[73]     0.9    0.01    0.00                 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back() (basic_string.h:1600 @ 463450) [73]
-----------------------------------------------
                0.00    0.00   38000/11000000     bool boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >::parse<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) const (list.hpp:34 @ 40b657) [114]
                0.00    0.00 10962000/11000000     bool boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >::parse<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) const (list.hpp:40 @ 40b712) [108]
[76]     0.4    0.01    0.00 11000000         bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (parse_into_container.hpp:282 @ 40b2db) [76]
-----------------------------------------------
                                                 <spontaneous>
[101]    0.4    0.01    0.00                 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.tcc:257 @ 462a80) [101]
-----------------------------------------------
                0.00    0.00 2000000/31000000     bool boost::spirit::x3::detail::rule_parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, auto csv::make_csv_parser<char>(char)::_>::parse_rhs_main<boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, mpl_::bool_<false>) (rule.hpp:223 @ 40ab6a) [7412]
                0.00    0.00 9000000/31000000     bool boost::spirit::x3::detail::rule_parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, auto csv::make_csv_parser<char>(char)::_>::call_rule_definition<boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, mpl_::bool_<false> >(boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > > const&, char const*, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, mpl_::bool_<false>) (rule.hpp:344 @ 40af6e) [35]
                0.00    0.00 9000000/31000000     bool boost::spirit::x3::detail::rule_parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, auto csv::make_csv_parser<char>(char)::_>::call_rule_definition<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, mpl_::bool_<false> >(boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > > const&, char const*, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, mpl_::bool_<false>) (rule.hpp:344 @ 40b174) [7421]
                0.00    0.00 11000000/31000000     bool boost::spirit::x3::detail::rule_parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, auto csv::make_csv_parser<char>(char)::_>::call_rule_definition<boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, mpl_::bool_<false> >(boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > const&, char const*, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, mpl_::bool_<false>) (rule.hpp:344 @ 40b455) [7419]
[6423]   0.0    0.00    0.00 31000000         void boost::spirit::x3::traits::post_transform<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (transform_attribute.hpp:103 @ 40a5db) [6423]
-----------------------------------------------
                0.00    0.00 9000000/9000000     bool boost::spirit::x3::detail::parse_sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, boost::spirit::x3::traits::container_attribute) (sequence.hpp:379 @ 40b006) [7430]
[6424]   0.0    0.00    0.00 9000000         bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40aee9) [6424]
-----------------------------------------------
                0.00    0.00 2000000/2000000     bool boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >::parse<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const (alternative.hpp:40 @ 40b3cc) [8926]
[6425]   0.0    0.00    0.00 2000000         bool boost::spirit::x3::detail::parse_alternative<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (alternative.hpp:244 @ 40ab02) [6425]
-----------------------------------------------
                0.00    0.00  328000/328000      __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (vector.tcc:313 @ 40b524) [50127]
[6426]   0.0    0.00    0.00  328000         void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_insert_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (vector.tcc:321 @ 40a660) [6426]
-----------------------------------------------
                0.00    0.00   38000/38000       bool boost::spirit::x3::detail::parse_into_container_impl<boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, void>::call<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (expect.hpp:91 @ 40b887) [7452]
[6427]   0.0    0.00    0.00   38000         bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (parse_into_container.hpp:282 @ 40b54d) [6427]
-----------------------------------------------
                0.00    0.00    6000/38000       bool boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>::parse<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&) const (list.hpp:34 @ 40ba0a) [8943]
                0.00    0.00   32000/38000       bool boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>::parse<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&) const (list.hpp:40 @ 40ba99) [8948]
[6428]   0.0    0.00    0.00   38000         bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >(boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&) (parse_into_container.hpp:282 @ 40b7ff) [6428]
-----------------------------------------------
                0.00    0.00   18000/18000       __gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > > std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::emplace<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&&) (vector.tcc:313 @ 40b9a6) [50214]
[6429]   0.0    0.00    0.00   18000         void std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::_M_insert_aux<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&&) (vector.tcc:321 @ 40a156) [6429]
-----------------------------------------------
                0.00    0.00    6000/6000        std::_Vector_base<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::_Vector_impl::_Vector_impl() (stl_vector.h:87 @ 40bb0b) [38678]
[6430]   0.0    0.00    0.00    6000         bool boost::spirit::x3::detail::parse_sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >(boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, boost::spirit::x3::traits::container_attribute) (sequence.hpp:372 @ 40b9df) [6430]
-----------------------------------------------
                0.00    0.00    6000/6000        void std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::_M_insert_dispatch<__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > > >(__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, __gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, __gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, std::__false_type) (stl_vector.h:1375 @ 40bb74) [50211]
[6431]   0.0    0.00    0.00    6000         void std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > > >(__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, __gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, __gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, std::forward_iterator_tag) (vector.tcc:616 @ 4098ba) [6431]
-----------------------------------------------
                0.00    0.00    6000/6000        void boost::spirit::x3::traits::append_container<std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, void>::reserve<__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > > >(std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, __gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, __gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, mpl_::bool_<true>) (container_traits.hpp:170 @ 40bb5a) [7465]
[6432]   0.0    0.00    0.00    6000         std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::reserve(unsigned long) (vector.tcc:65 @ 40946c) [6432]
-----------------------------------------------
                0.00    0.00    1000/1000        main (gprof-csv.cpp:18 @ 407a50) [5191]
[6433]   0.0    0.00    0.00    1000         int bench<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, false>&>(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, false>&) (input.hpp:56 @ 40bc0f) [6433]
-----------------------------------------------
                0.00    0.00       6/6           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char const*>(char const*, char const*, std::__false_type) (basic_string.h:196 @ 46529b) [51962]
[6434]   0.0    0.00    0.00       6         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) (basic_string.tcc:206 @ 408b92) [6434]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [67003]
[6435]   0.0    0.00    0.00       1         _GLOBAL__sub_I__Z12bench_parserB5cxx11 (gprof-csv.cpp:26 @ 407a7e) [6435]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0 (x3_ns_rdef.hpp:38 @ 407bab) [67074]
[6436]   0.0    0.00    0.00       1         auto csv::make_csv_parser<char>(char) (x3_ns_rdef.hpp:15 @ 408116) [6436]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [6435] _GLOBAL__sub_I__Z12bench_parserB5cxx11 (gprof-csv.cpp:26 @ 407a7e) [23] bool __gnu_cxx::operator!=<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_iterator.h:871 @ 40ae68) [95] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() (basic_string.h:180 @ 40c1c5)
 [6433] int bench<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, false>&>(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, false>&) (input.hpp:56 @ 40bc0f) [50] bool __gnu_cxx::operator!=<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_iterator.h:871 @ 40b150) [64] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:439 @ 4637a8)
 [6436] auto csv::make_csv_parser<char>(char) (x3_ns_rdef.hpp:15 @ 408116) [11] bool boost::spirit::x3::char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >::parse<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, boost::spirit::x3::unused_type const>(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, boost::spirit::x3::unused_type, boost::spirit::x3::unused_type const&) const (char_parser.hpp:29 @ 40b6f6) [65] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.tcc:470 @ 4637d1)
  [34] bool boost::spirit::x3::detail::rule_parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, auto csv::make_csv_parser<char>(char)::_>::parse_rhs_main<boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, mpl_::bool_<false>) (rule.hpp:209 @ 40b37d) [51] bool boost::spirit::x3::char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >::parse<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, boost::spirit::x3::unused_type>(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, boost::spirit::x3::unused_type, boost::spirit::x3::unused_type&) const (char_parser.hpp:29 @ 40aeb7) [15] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_compare(unsigned long, unsigned long) (basic_string.h:361 @ 462a77)
  [35] bool boost::spirit::x3::detail::rule_parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, auto csv::make_csv_parser<char>(char)::_>::call_rule_definition<boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, mpl_::bool_<false> >(boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > > const&, char const*, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, mpl_::bool_<false>) (rule.hpp:344 @ 40af6e) [12] bool boost::spirit::x3::char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >::parse<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, char>(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, boost::spirit::x3::unused_type, char&) const (char_parser.hpp:29 @ 40aec6) [3] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) (basic_string.h:110 @ 409b48)
 [6430] bool boost::spirit::x3::detail::parse_sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >(boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, boost::spirit::x3::traits::container_attribute) (sequence.hpp:372 @ 40b9df) [1] bool boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >::parse<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const (kleene.hpp:32 @ 40af41) [28] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) (basic_string.h:110 @ 40a921)
  [77] bool boost::spirit::x3::detail::parse_sequence<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, boost::spirit::x3::traits::container_attribute) (sequence.hpp:378 @ 40b3c1) [52] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const (basic_string.h:152 @ 462a89) [96] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) (basic_string.h:110 @ 40b304)
 [6425] bool boost::spirit::x3::detail::parse_alternative<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (alternative.hpp:244 @ 40ab02) [24] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const (basic_string.h:152 @ 4634a1) [97] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) (basic_string.h:110 @ 40b318)
   [7] bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40ae57) [2] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check_length(unsigned long, unsigned long, char const*) const (basic_string.h:271 @ 46347f) [66] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) (basic_string.h:110 @ 40bd1b)
  [40] bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:289 @ 40aeab) [53] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const (basic_string.h:797 @ 462a98) [6434] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) (basic_string.tcc:206 @ 408b92)
  [76] bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (parse_into_container.hpp:282 @ 40b2db) [84] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const (basic_string.h:136 @ 40a5f1) [6] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:206 @ 408c30)
  [41] bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (parse_into_container.hpp:289 @ 40b439) [85] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const (basic_string.h:136 @ 40b354) [29] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:215 @ 408c58)
 [6427] bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) (parse_into_container.hpp:282 @ 40b54d) [86] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const (basic_string.h:136 @ 40c1c2) [67] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:217 @ 408c5c)
  [30] bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40b095) [54] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const (basic_string.h:136 @ 462a95) [26] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:232 @ 408c71)
  [42] bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:289 @ 40b13e) [87] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const (basic_string.h:136 @ 462ac0) [68] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) (basic_string.tcc:233 @ 408c82)
 [6424] bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40aee9) [13] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const (basic_string.h:136 @ 46372e) [69] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() (basic_string.h:142 @ 40aa94)
  [43] bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:289 @ 40af90) [4] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const (basic_string.h:855 @ 462a9c) [16] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() (basic_string.h:142 @ 40b492)
  [31] bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40afc1) [55] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const (basic_string.h:857 @ 462ff2) [17] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (basic_string.tcc:392 @ 463470)
 [6428] bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >(boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&) (parse_into_container.hpp:282 @ 40b7ff) [88] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const (basic_string.h:855 @ 463548) [27] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (basic_string.tcc:399 @ 4634a5)
  [33] bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >(boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >&) (parse_into_container.hpp:282 @ 40baf2) [56] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const (basic_string.h:855 @ 463742) [70] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (basic_string.tcc:417 @ 463511)
  [32] bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:282 @ 40b203) [89] std::char_traits<char>::copy(char*, char const*, unsigned long) (char_traits.h:290 @ 408c22) [18] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (basic_string.tcc:417 @ 463519)
  [44] bool boost::spirit::x3::detail::parse_into_container<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (parse_into_container.hpp:289 @ 40b27a) [25] std::char_traits<char>::copy(char*, char const*, unsigned long) (char_traits.h:288 @ 408c6c) [98] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char) (basic_string.tcc:410 @ 463530)
  [45] bool boost::spirit::x3::detail::parse_sequence_plain<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char&) (sequence.hpp:338 @ 40aead) [57] std::char_traits<char>::move(char*, char const*, unsigned long) (char_traits.h:282 @ 463788) [75] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) (basic_string.h:196 @ 40b324)
  [46] bool boost::spirit::x3::detail::parse_into_container_base_impl<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >::call_synthesize_x<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, mpl_::bool_<false>) (parse_into_container.hpp:99 @ 40ab56) [90] std::char_traits<char>::assign(char&, char const&) (char_traits.h:243 @ 40a90c) [21] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char*>(char*, char*, std::__false_type) (basic_string.h:196 @ 40bd2e)
  [22] bool boost::spirit::x3::detail::parse_into_container_base_impl<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >::call_synthesize_x<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, mpl_::bool_<false>) (parse_into_container.hpp:99 @ 40ae64) [58] std::char_traits<char>::assign(char&, char const&) (char_traits.h:243 @ 40afeb) [19] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char) (basic_string.h:1526 @ 40ae8e)
  [47] bool boost::spirit::x3::detail::parse_into_container_base_impl<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >::call_synthesize_x<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type>, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, boost::spirit::x3::context<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::list<boost::spirit::x3::sequence<boost::spirit::x3::not_predicate<boost::spirit::x3::eoi_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::list<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::alternative<boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::sequence<boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::expect_directive<boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::alternative<boost::spirit::x3::negated_char_parser<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::sequence<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, boost::spirit::x3::kleene<boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, boost::spirit::x3::rule_definition<auto csv::make_csv_parser<char>(char)::_, boost::spirit::x3::kleene<boost::spirit::x3::difference<boost::spirit::x3::negated_char_parser<boost::spirit::x3::char_set<boost::spirit::char_encoding::standard, char> >, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>, boost::spirit::x3::literal_char<boost::spirit::char_encoding::standard, boost::spirit::x3::unused_type> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, false> > >, boost::spirit::x3::eol_parser>, boost::spirit::x3::expect_directive<boost::spirit::x3::optional<boost::spirit::x3::eol_parser> > >, boost::spirit::x3::expect_directive<boost::spirit::x3::eoi_parser> > const, boost::spirit::x3::unused_type> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, mpl_::bool_<false>) (parse_into_container.hpp:106 @ 40b4d9) [59] std::char_traits<char>::assign(char&, char const&) (char_traits.h:243 @ 463514) [20] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, unsigned long, char) (basic_string.h:1323 @ 4636f7)
 [6423] void boost::spirit::x3::traits::post_transform<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (transform_attribute.hpp:103 @ 40a5db) [60] std::char_traits<char>::assign(char&, char const&) (char_traits.h:243 @ 4638db) [99] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) (basic_string.h:128 @ 40b4b9)
  [48] void boost::spirit::x3::traits::post_transform<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (transform_attribute.hpp:107 @ 40a63a) [91] void std::_Destroy_aux<false>::__destroy<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*>(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*) (stl_construct.h:102 @ 40a4eb) [100] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) (basic_string.h:297 @ 462abc)
  [78] void boost::spirit::x3::traits::move_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (move_to.hpp:187 @ 40a5e9) [61] std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned long) (stl_vector.h:170 @ 409b28) [71] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned long, unsigned long, char const*, unsigned long) (basic_string.h:1674 @ 40b05f)
  [79] void boost::spirit::x3::traits::move_to<char>(char const&, char&) (move_to.hpp:194 @ 40abc3) [14] std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned long) (stl_vector.h:170 @ 40a8c1) [72] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned long) (basic_string.tcc:285 @ 463016)
  [80] void boost::spirit::x3::traits::move_to<char>(char const&, char&) (move_to.hpp:195 @ 40abcc) [92] std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_deallocate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned long) (stl_vector.h:177 @ 40a9f4) [73] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back() (basic_string.h:1600 @ 463450)
   [8] void boost::spirit::x3::traits::move_to<char>(char const&, char&) (move_to.hpp:194 @ 40ae78) [62] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (stl_uninitialized.h:74 @ 40bd09) [101] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.tcc:257 @ 462a80)
  [49] __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) (new_allocator.h:110 @ 40ae45) [6426] void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_insert_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (vector.tcc:321 @ 40a660) [102] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.tcc:254 @ 462a85)
   [9] __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) (new_allocator.h:110 @ 40b04a) [93] void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_insert_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (vector.tcc:396 @ 40a9f1) [74] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.tcc:254 @ 462a8d)
  [81] __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) (new_allocator.h:110 @ 40b3b4) [6429] void std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::_M_insert_aux<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&&) (vector.tcc:321 @ 40a156) [103] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long) (basic_string.h:132 @ 40a904)
  [82] __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) (new_allocator.h:110 @ 40b473) [94] void std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::_M_insert_aux<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&&) (vector.tcc:396 @ 40a4f0) [104] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long) (basic_string.h:132 @ 40b4b5)
   [5] __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long) (new_allocator.h:110 @ 40b505) [6431] void std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > > >(__gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, __gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, __gnu_cxx::__normal_iterator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >, std::forward_iterator_tag) (vector.tcc:616 @ 4098ba) [105] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:401 @ 40b358)
  [10] __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator++() (stl_iterator.h:790 @ 40ae84) [6432] std::vector<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >::reserve(unsigned long) (vector.tcc:65 @ 40946c) [106] void std::_Construct<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (stl_construct.h:75 @ 40a91c)
  [83] __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::__normal_iterator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* const&) (stl_iterator.h:768 @ 40b478) [63] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() (basic_string.h:180 @ 40b041) [107] std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) (stl_iterator_base_funcs.h:102 @ 408c52)
